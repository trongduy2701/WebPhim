@model WebsitePhimHoatHinh18.Models.EF.Users

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

<h2>Đăng ký</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success">@successMessage</div>
        }
    <div class="row">
        @Html.LabelFor(model => model.UserName, new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
        <br />
        <div class="row">
            @Html.LabelFor(model => model.Password, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            @Html.LabelFor(model => model.Email, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            @Html.LabelFor(model => model.Phone, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Đăng ký" class="btn btn-outline-dark" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
}
